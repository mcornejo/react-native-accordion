{"version":3,"names":["useLayout","defaultHeight","layout","setLayout","useState","height","width","measured","onLayout","React","useCallback","e","nativeEvent"],"sources":["index.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nconst useLayout = (defaultHeight?: number) => {\n  const [layout, setLayout] = useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: defaultHeight || 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n};\n\nexport default useLayout;\n"],"mappings":";;;;;;AAAA;AAAwC;AAAA;AAGxC,MAAMA,SAAS,GAAIC,aAAsB,IAAK;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG,IAAAC,eAAQ,EAIjC;IAAEC,MAAM,EAAEJ,aAAa,IAAI,CAAC;IAAEK,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAM,CAAC,CAAC;EAE7D,MAAMC,QAAQ,GAAGC,cAAK,CAACC,WAAW,CAC/BC,CAAoB,IAAK;IACxB,MAAM;MAAEN,MAAM;MAAEC;IAAM,CAAC,GAAGK,CAAC,CAACC,WAAW,CAACV,MAAM;IAE9C,IAAIG,MAAM,KAAKH,MAAM,CAACG,MAAM,IAAIC,KAAK,KAAKJ,MAAM,CAACI,KAAK,EAAE;MACtD;IACF;IAEAH,SAAS,CAAC;MACRE,MAAM;MACNC,KAAK;MACLC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,EACD,CAACL,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACI,KAAK,CAAC,CAC9B;EAED,OAAO,CAACJ,MAAM,EAAEM,QAAQ,CAAC;AAC3B,CAAC;AAAC,eAEaR,SAAS;AAAA"}