{"version":3,"names":["Chevron","sizeIcon","progress","colorIcon","handleIcon","styleChevron","activeBackgroundIcon","inactiveBackgroundIcon","style","useAnimatedStyle","backgroundColor","mixColor","value","transform","rotateZ","mix","Math","PI","hasIcon","useMemo","renderIcon","useCallback","undefined","containerAnimatedStyle","styles","container","StyleSheet","create","height","width","borderRadius","justifyContent","alignItems"],"sources":["chevron.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport Svg, { Path } from 'react-native-svg';\nimport Animated, {\n  AnimatedStyleProp,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport { mix, mixColor } from 'react-native-redash';\nimport type { IChevronProps } from './types';\n\nconst Chevron = ({\n  sizeIcon,\n  progress,\n  colorIcon,\n  handleIcon,\n  styleChevron,\n  activeBackgroundIcon,\n  inactiveBackgroundIcon,\n}: IChevronProps) => {\n  const style = useAnimatedStyle<AnimatedStyleProp<ViewStyle>>(() => ({\n    // @ts-ignore\n    backgroundColor: mixColor(\n      progress.value,\n      inactiveBackgroundIcon,\n      activeBackgroundIcon\n    ),\n    transform: [{ rotateZ: `${mix(progress.value, 0, Math.PI)}rad` }],\n  }));\n\n  const hasIcon = useMemo(\n    () => (\n      <Svg\n        width={sizeIcon}\n        height={sizeIcon}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <Path d=\"M6 9l6 6 6-6\" stroke={colorIcon} />\n      </Svg>\n    ),\n    [colorIcon, sizeIcon]\n  );\n  const renderIcon = useCallback(() => {\n    if (handleIcon === null) {\n      return null;\n    }\n\n    return handleIcon !== undefined ? handleIcon(progress) : hasIcon;\n  }, [handleIcon, hasIcon, progress]);\n\n  const containerAnimatedStyle = useMemo<AnimatedStyleProp<ViewStyle>[]>(() => [styles.container, style, styleChevron], [style, styleChevron]);\n\n  return (\n    <Animated.View style={containerAnimatedStyle}>{renderIcon()}</Animated.View>\n  );\n};\n\nexport default Chevron;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 30,\n    width: 30,\n    borderRadius: 30 / 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#525251',\n  },\n});\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAIA;AAAoD;AAAA;AAGpD,MAAMA,OAAO,GAAG,QAQK;EAAA,IARJ;IACfC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,YAAY;IACZC,oBAAoB;IACpBC;EACa,CAAC;EACd,MAAMC,KAAK,GAAG,IAAAC,uCAAgB,EAA+B,OAAO;IAClE;IACAC,eAAe,EAAE,IAAAC,2BAAQ,EACvBT,QAAQ,CAACU,KAAK,EACdL,sBAAsB,EACtBD,oBAAoB,CACrB;IACDO,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAG,GAAE,IAAAC,sBAAG,EAACb,QAAQ,CAACU,KAAK,EAAE,CAAC,EAAEI,IAAI,CAACC,EAAE,CAAE;IAAK,CAAC;EAClE,CAAC,CAAC,CAAC;EAEH,MAAMC,OAAO,GAAG,IAAAC,cAAO,EACrB,mBACE,6BAAC,uBAAG;IACF,KAAK,EAAElB,QAAS;IAChB,MAAM,EAAEA,QAAS;IACjB,OAAO,EAAC,WAAW;IACnB,IAAI,EAAC,MAAM;IACX,WAAW,EAAE,CAAE;IACf,aAAa,EAAC,OAAO;IACrB,cAAc,EAAC;EAAO,gBAEtB,6BAAC,oBAAI;IAAC,CAAC,EAAC,cAAc;IAAC,MAAM,EAAEE;EAAU,EAAG,CAE/C,EACD,CAACA,SAAS,EAAEF,QAAQ,CAAC,CACtB;EACD,MAAMmB,UAAU,GAAG,IAAAC,kBAAW,EAAC,MAAM;IACnC,IAAIjB,UAAU,KAAK,IAAI,EAAE;MACvB,OAAO,IAAI;IACb;IAEA,OAAOA,UAAU,KAAKkB,SAAS,GAAGlB,UAAU,CAACF,QAAQ,CAAC,GAAGgB,OAAO;EAClE,CAAC,EAAE,CAACd,UAAU,EAAEc,OAAO,EAAEhB,QAAQ,CAAC,CAAC;EAEnC,MAAMqB,sBAAsB,GAAG,IAAAJ,cAAO,EAAiC,MAAM,CAACK,MAAM,CAACC,SAAS,EAAEjB,KAAK,EAAEH,YAAY,CAAC,EAAE,CAACG,KAAK,EAAEH,YAAY,CAAC,CAAC;EAE5I,oBACE,6BAAC,8BAAQ,CAAC,IAAI;IAAC,KAAK,EAAEkB;EAAuB,GAAEH,UAAU,EAAE,CAAiB;AAEhF,CAAC;AAAC,eAEapB,OAAO;AAAA;AAEtB,MAAMwB,MAAM,GAAGE,uBAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,EAAE,GAAG,CAAC;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBtB,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"}